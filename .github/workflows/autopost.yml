name: Daily Instagram Auto-Post

on:
name: Daily Instagram Auto-Post

on:
  schedule:
    - cron: "0 8 * * *"
  workflow_dispatch: {}

permissions:
  contents: write
  schedule:
    # Run every day at 08:00 UTC (change this later)
    - cron: "0 8 * * *"
  workflow_dispatch: {}

jobs:
  post:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install pillow requests

      - name: Generate image & caption payload
        env:
          IG_TOKEN: ${{ secrets.IG_TOKEN }}
          IG_USER_ID: ${{ secrets.IG_USER_ID }}
        run: |
          python post.py

      - name: Commit generated image
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add out/*.jpg post_payload.json || true
          git commit -m "chore: add daily image $(date -u +'%Y-%m-%d')" || echo "No changes to commit"
          git push

      - name: Wait for raw URL to become available
        run: |
          echo "Sleeping 15s so the image is served on raw.githubusercontent.com..."
          sleep 15

      - name: Publish to Instagram (create & publish)
        env:
          IG_TOKEN: ${{ secrets.IG_TOKEN }}
          IG_USER_ID: ${{ secrets.IG_USER_ID }}
        run: |
          python - << 'PY'
          import os, json, time, requests
          IG_TOKEN = os.environ['IG_TOKEN']; IG_USER_ID = os.environ['IG_USER_ID']
          with open('post_payload.json', 'r', encoding='utf-8') as f:
              payload = json.load(f)
          image_url = payload['image_url']; caption = payload['caption']
          create = f"https://graph.facebook.com/v24.0/{IG_USER_ID}/media"
          r = requests.post(create, data={"image_url": image_url, "caption": caption, "access_token": IG_TOKEN}, timeout=30)
          print("Create status:", r.status_code, r.text); r.raise_for_status()
          creation_id = r.json()['id']
          time.sleep(5)
          publish = f"https://graph.facebook.com/v24.0/{IG_USER_ID}/media_publish"
          r2 = requests.post(publish, data={"creation_id": creation_id, "access_token": IG_TOKEN}, timeout=30)
          print("Publish status:", r2.status_code, r2.text); r2.raise_for_status()
          PY
